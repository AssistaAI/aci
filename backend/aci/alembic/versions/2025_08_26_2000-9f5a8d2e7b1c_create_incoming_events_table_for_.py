"""Create incoming_events table for triggers module

Revision ID: 9f5a8d2e7b1c
Revises: 48bf142a794c
Create Date: 2025-08-26 20:00:00.000000+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9f5a8d2e7b1c'
down_revision: Union[str, None] = '48bf142a794c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create webhook provider enum
    webhook_provider_enum = sa.Enum(
        'slack', 'hubspot', 'gmail',
        name='webhookprovider',
        create_type=True
    )
    
    op.create_table('incoming_events',
        sa.Column('id', sa.UUID(), nullable=False, default=sa.text('gen_random_uuid()')),
        sa.Column('provider', webhook_provider_enum, nullable=False),
        sa.Column('event_id', sa.Text(), nullable=False),
        sa.Column('received_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('signature_valid', sa.Boolean(), nullable=False, default=False),
        sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column('processed', sa.Boolean(), nullable=False, default=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('provider', 'event_id', name='uq_incoming_events_provider_event_id')
    )
    
    # Create index for faster queries on provider and processed status
    op.create_index('ix_incoming_events_provider_processed', 'incoming_events', ['provider', 'processed'])
    op.create_index('ix_incoming_events_received_at', 'incoming_events', ['received_at'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_incoming_events_received_at', table_name='incoming_events')
    op.drop_index('ix_incoming_events_provider_processed', table_name='incoming_events')
    op.drop_table('incoming_events')
    
    # Drop the enum type
    webhook_provider_enum = sa.Enum(name='webhookprovider')
    webhook_provider_enum.drop(op.get_bind(), checkfirst=True)
    
    # ### end Alembic commands ###