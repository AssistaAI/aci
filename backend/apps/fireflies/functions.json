[
  {
    "name": "FIREFLIES__AI_APPS_OUTPUTS",
    "description": "Retrieve AI App outputs for meetings that ran successfully",
    "tags": [
      "meetings",
      "transcripts",
      "ai",
      "apps"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query and variables for AI Apps outputs",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to get AI Apps outputs",
              "default": "query GetAIAppsOutputs($appId: String, $transcriptId: String, $skip: Float, $limit: Float) { apps(app_id: $appId, transcript_id: $transcriptId, skip: $skip, limit: $limit) { outputs { transcript_id user_id app_id created_at title prompt response } } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL query",
              "properties": {
                "appId": {
                  "type": "string",
                  "description": "Retrieve all outputs against a specific AI App"
                },
                "transcriptId": {
                  "type": "string",
                  "description": "Retrieve all outputs against a specific meeting/transcript"
                },
                "skip": {
                  "type": "number",
                  "description": "Number of records to skip over. Helps paginate results when used with limit"
                },
                "limit": {
                  "type": "number",
                  "description": "Maximum number of apps outputs to fetch (default: 10, maximum: 10)",
                  "default": 10,
                  "maximum": 10
                }
              },
              "required": [],
              "visible": [
                "appId",
                "transcriptId",
                "skip",
                "limit"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__USER",
    "description": "Retrieve information about a specific user",
    "tags": [
      "user",
      "profile"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query and variables for user information",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to get user information",
              "default": "query GetUser($userId: String) { user(id: $userId) { user_id name email minutes_consumed is_admin recent_transcript recent_meeting num_transcripts } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL query",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "ID of the user to retrieve information for. Optional - if not provided, returns information for the owner of the API key"
                }
              },
              "required": [],
              "visible": [
                "userId"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__LIST_USERS",
    "description": "Retrieve a list of all users within the team",
    "tags": [
      "users",
      "organization",
      "team"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query for listing users",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to list users",
              "default": "{ users { user_id name email } }"
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "query"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__TRANSCRIPT",
    "description": "Retrieve information about a specific meeting transcript",
    "tags": [
      "meeting",
      "transcript",
      "recording"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query and variables for transcript information",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to get transcript information",
              "default": "query Transcript($transcriptId: String!) { transcript(id: $transcriptId) { id title date duration sentences { speaker_id text start_time end_time } summary { keywords action_items outline } } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL query",
              "properties": {
                "transcriptId": {
                  "type": "string",
                  "description": "ID of the transcript to retrieve"
                }
              },
              "required": [
                "transcriptId"
              ],
              "visible": [
                "transcriptId"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__SET_USER_ROLE",
    "description": "Set or update a user's role within the organization",
    "tags": [
      "users",
      "organization",
      "admin",
      "permissions"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL mutation and variables for setting user role",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL mutation to set user role",
              "default": "mutation SetUserRole($user_id: String!, $role: Role!) { setUserRole(user_id: $user_id, role: $role) { name is_admin } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL mutation",
              "properties": {
                "user_id": {
                  "type": "string",
                  "description": "ID of the user whose role will be updated"
                },
                "role": {
                  "type": "string",
                  "description": "Role to assign to the user",
                  "enum": [
                    "admin",
                    "user"
                  ]
                }
              },
              "required": [
                "user_id",
                "role"
              ],
              "visible": [
                "user_id",
                "role"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__LIST_TRANSCRIPTS",
    "description": "Retrieve a list of meeting transcripts with filtering options",
    "tags": [
      "meetings",
      "transcripts",
      "recordings"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query and variables for listing transcripts",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to list transcripts",
              "default": "query Transcripts($title: String, $fromDate: DateTime, $toDate: DateTime, $limit: Int, $skip: Int, $host_email: String, $organizer_email: String, $participant_email: String, $user_id: String, $mine: Boolean) { transcripts(title: $title, fromDate: $fromDate, toDate: $toDate, limit: $limit, skip: $skip, host_email: $host_email, organizer_email: $organizer_email, participant_email: $participant_email, user_id: $user_id, mine: $mine) { id title date duration } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL query",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Title of the transcript to filter by (max 256 characters)"
                },
                "fromDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Return all transcripts created after this date (ISO 8601 format, e.g., 2024-07-08T22:13:46.660Z)"
                },
                "toDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Return all transcripts created before this date (ISO 8601 format, e.g., 2024-07-08T22:13:46.660Z)"
                },
                "limit": {
                  "type": "integer",
                  "description": "Number of transcripts to return (maximum: 50)",
                  "default": 10,
                  "maximum": 50
                },
                "skip": {
                  "type": "integer",
                  "description": "Number of transcripts to skip for pagination"
                },
                "host_email": {
                  "type": "string",
                  "description": "Filter all meetings accordingly to meetings that have this email as the host"
                },
                "organizer_email": {
                  "type": "string",
                  "description": "Filter all meetings accordingly to meetings that have this email as the organizer"
                },
                "participant_email": {
                  "type": "string",
                  "description": "Filter all meetings accordingly to all meetings that contains this email as an attendee"
                },
                "user_id": {
                  "type": "string",
                  "description": "Filter all meetings that have this user ID as the organizer or participant"
                },
                "mine": {
                  "type": "boolean",
                  "description": "Filter all meetings that have the API key owner as the organizer"
                }
              },
              "required": [],
              "visible": [
                "title",
                "fromDate",
                "toDate",
                "limit",
                "skip",
                "host_email",
                "organizer_email",
                "participant_email",
                "user_id",
                "mine"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__SEARCH_TRANSCRIPTS",
    "description": "Search for specific content within meeting transcripts using keywords and filters",
    "tags": [
      "meetings",
      "transcripts",
      "search",
      "content"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query and variables for searching transcripts",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to search transcripts",
              "default": "query SearchTranscripts($keyword: String, $start_date: DateTime, $end_date: DateTime, $limit: Int, $skip: Int) { search(keyword: $keyword, start_date: $start_date, end_date: $end_date, limit: $limit, skip: $skip) { id title date duration sentences { speaker_id text start_time end_time } } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL query",
              "properties": {
                "keyword": {
                  "type": "string",
                  "description": "Search keyword or phrase to find in transcript content"
                },
                "start_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start date for search range (ISO 8601 format)"
                },
                "end_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End date for search range (ISO 8601 format)"
                },
                "limit": {
                  "type": "integer",
                  "description": "Maximum number of search results to return (default: 10, maximum: 50)",
                  "default": 10,
                  "maximum": 50
                },
                "skip": {
                  "type": "integer",
                  "description": "Number of results to skip for pagination"
                }
              },
              "required": [
                "keyword"
              ],
              "visible": [
                "keyword",
                "start_date",
                "end_date",
                "limit",
                "skip"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__MEETING_ANALYTICS",
    "description": "Get advanced analytics and insights for meetings including speaker talk time, sentiment analysis, and engagement metrics",
    "tags": [
      "meetings",
      "analytics",
      "insights",
      "sentiment",
      "engagement"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query and variables for meeting analytics",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to get meeting analytics",
              "default": "query GetMeetingAnalytics($transcriptId: String!) { analytics(transcript_id: $transcriptId) { speaker_stats { speaker_id total_talk_time percentage_of_meeting word_count } sentiment_analysis { overall_sentiment positive_keywords negative_keywords } engagement_metrics { questions_asked action_items_count } } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL query",
              "properties": {
                "transcriptId": {
                  "type": "string",
                  "description": "ID of the transcript to get analytics for"
                }
              },
              "required": [
                "transcriptId"
              ],
              "visible": [
                "transcriptId"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__GENERATE_CUSTOM_SUMMARY",
    "description": "Generate custom summaries for meetings based on specific topics or questions using AI",
    "tags": [
      "meetings",
      "summary",
      "ai",
      "custom",
      "topics"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "connector",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL mutation and variables for generating custom summary",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL mutation to generate custom summary",
              "default": "mutation GenerateCustomSummary($transcriptId: String!, $prompt: String!, $focus_areas: [String]) { generateCustomSummary(transcript_id: $transcriptId, prompt: $prompt, focus_areas: $focus_areas) { summary key_points action_items } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL mutation",
              "properties": {
                "transcriptId": {
                  "type": "string",
                  "description": "ID of the transcript to generate summary for"
                },
                "prompt": {
                  "type": "string",
                  "description": "Custom prompt or question to guide the summary generation"
                },
                "focus_areas": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Specific areas or topics to focus on in the summary"
                }
              },
              "required": [
                "transcriptId",
                "prompt"
              ],
              "visible": [
                "transcriptId",
                "prompt",
                "focus_areas"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__TEAM_INSIGHTS",
    "description": "Get team-wide insights and analytics across multiple meetings to track collaboration patterns and productivity",
    "tags": [
      "team",
      "insights",
      "analytics",
      "collaboration",
      "productivity"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query and variables for team insights",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to get team insights",
              "default": "query GetTeamInsights($startDate: DateTime, $endDate: DateTime, $teamMembers: [String]) { teamInsights(start_date: $startDate, end_date: $endDate, team_members: $teamMembers) { meeting_frequency average_meeting_duration top_speakers most_active_days collaboration_score } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL query",
              "properties": {
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start date for insights analysis (ISO 8601 format)"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End date for insights analysis (ISO 8601 format)"
                },
                "teamMembers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of team member emails to include in analysis"
                }
              },
              "required": [],
              "visible": [
                "startDate",
                "endDate",
                "teamMembers"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__CREATE_SOUNDBITE",
    "description": "Create audio soundbites from specific parts of meeting transcripts for easy sharing and reference",
    "tags": [
      "meetings",
      "soundbites",
      "audio",
      "sharing",
      "clips"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL mutation and variables for creating soundbite",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL mutation to create soundbite",
              "default": "mutation CreateBite($transcriptId: String!, $startTime: Float!, $endTime: Float!, $title: String) { createBite(transcript_id: $transcriptId, start_time: $startTime, end_time: $endTime, title: $title) { id url duration title } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL mutation",
              "properties": {
                "transcriptId": {
                  "type": "string",
                  "description": "ID of the transcript to create soundbite from"
                },
                "startTime": {
                  "type": "number",
                  "description": "Start time of the soundbite in seconds"
                },
                "endTime": {
                  "type": "number",
                  "description": "End time of the soundbite in seconds"
                },
                "title": {
                  "type": "string",
                  "description": "Optional title for the soundbite"
                }
              },
              "required": [
                "transcriptId",
                "startTime",
                "endTime"
              ],
              "visible": [
                "transcriptId",
                "startTime",
                "endTime",
                "title"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__INTEGRATIONS",
    "description": "Get list of available integrations and their configuration status for connecting with other tools",
    "tags": [
      "integrations",
      "connections",
      "tools",
      "setup"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "connector",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL query for integrations",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL query to get integrations",
              "default": "{ integrations { name type status configuration_url supported_features } }"
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "query"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__UPDATE_MEETING_TITLE",
    "description": "Update the title of a meeting transcript for better organization and identification",
    "tags": [
      "meetings",
      "title",
      "update",
      "organization"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL mutation and variables for updating meeting notes",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL mutation to update meeting notes",
              "default": "mutation UpdateMeetingTitle($transcriptId: String!, $title: String!) { updateMeetingTitle(transcript_id: $transcriptId, title: $title) { id title } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL mutation",
              "properties": {
                "transcriptId": {
                  "type": "string",
                  "description": "ID of the transcript to update notes for"
                },
                "title": {
                  "type": "string",
                  "description": "New title for the meeting"
                }
              },
              "required": [
                "transcriptId",
                "title"
              ],
              "visible": [
                "transcriptId",
                "title"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "FIREFLIES__EXPORT_TRANSCRIPT",
    "description": "Export meeting transcript in various formats (PDF, DOCX, CSV, JSON) for sharing and archival purposes",
    "tags": [
      "meetings",
      "export",
      "transcript",
      "formats",
      "sharing"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "connector",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.fireflies.ai"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "description": "Headers for the HTTP request",
          "properties": {
            "Content-Type": {
              "type": "string",
              "description": "Content type of the request",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "description": "GraphQL mutation and variables for exporting transcript",
          "properties": {
            "query": {
              "type": "string",
              "description": "GraphQL mutation to export transcript",
              "default": "mutation ExportTranscript($transcriptId: String!, $format: ExportFormat!, $includeTimestamps: Boolean, $includeSpeakerLabels: Boolean) { exportTranscript(transcript_id: $transcriptId, format: $format, include_timestamps: $includeTimestamps, include_speaker_labels: $includeSpeakerLabels) { download_url expires_at } }"
            },
            "variables": {
              "type": "object",
              "description": "Variables for the GraphQL mutation",
              "properties": {
                "transcriptId": {
                  "type": "string",
                  "description": "ID of the transcript to export"
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "PDF",
                    "DOCX",
                    "CSV",
                    "JSON",
                    "TXT",
                    "SRT",
                    "VTT"
                  ],
                  "description": "Export format for the transcript"
                },
                "includeTimestamps": {
                  "type": "boolean",
                  "description": "Whether to include timestamps in the export",
                  "default": true
                },
                "includeSpeakerLabels": {
                  "type": "boolean",
                  "description": "Whether to include speaker labels in the export",
                  "default": true
                }
              },
              "required": [
                "transcriptId",
                "format"
              ],
              "visible": [
                "transcriptId",
                "format",
                "includeTimestamps",
                "includeSpeakerLabels"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  }
]