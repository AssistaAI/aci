[
  {
    "name": "LINEAR__ISSUES",
    "description": "Retrieve issues from Linear with filtering options for teams, assignees, status, and labels.",
    "tags": [
      "issues",
      "tasks",
      "project management"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Issues($first: Int, $filter: IssueFilter) { issues(first: $first, filter: $filter) { nodes { id title description state { name } assignee { name } team { name } labels { nodes { name } } createdAt updatedAt } } }",
              "description": "GraphQL query for retrieving issues"
            },
            "variables": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "default": 10,
                  "maximum": 50,
                  "description": "Number of issues to retrieve"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "team": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "object",
                          "properties": {
                            "eq": {
                              "type": "string",
                              "description": "Team ID to filter by"
                            }
                          },
                          "required": [],
                          "visible": [
                            "eq"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [],
                      "visible": [
                        "id"
                      ],
                      "additionalProperties": false
                    },
                    "assignee": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "object",
                          "properties": {
                            "eq": {
                              "type": "string",
                              "description": "Assignee ID to filter by"
                            }
                          },
                          "required": [],
                          "visible": [
                            "eq"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [],
                      "visible": [
                        "id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [],
                  "visible": [
                    "team",
                    "assignee"
                  ],
                  "description": "Filter conditions for issues",
                  "additionalProperties": false
                }
              },
              "required": [],
              "visible": [
                "first",
                "filter"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_ISSUE",
    "description": "Create a new issue in Linear with title, description, team assignment, and optional labels.",
    "tags": [
      "issues",
      "create",
      "task"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation IssueCreate($input: IssueCreateInput!) { issueCreate(input: $input) { success issue { id title description state { name } team { name } } } }",
              "description": "GraphQL mutation for creating an issue"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Issue title"
                    },
                    "description": {
                      "type": "string",
                      "description": "Issue description"
                    },
                    "teamId": {
                      "type": "string",
                      "description": "Team ID to assign the issue to"
                    },
                    "assigneeId": {
                      "type": "string",
                      "description": "User ID to assign the issue to"
                    },
                    "priority": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 4,
                      "description": "Issue priority (0=No priority, 1=Urgent, 2=High, 3=Medium, 4=Low)"
                    }
                  },
                  "required": [
                    "title",
                    "teamId"
                  ],
                  "visible": [
                    "title",
                    "description",
                    "teamId",
                    "assigneeId",
                    "priority"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__UPDATE_ISSUE",
    "description": "Update an existing issue in Linear with new title, description, status, or assignee.",
    "tags": [
      "issues",
      "update",
      "edit"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation IssueUpdate($id: String!, $input: IssueUpdateInput!) { issueUpdate(id: $id, input: $input) { success issue { id title description state { name } assignee { name } } } }",
              "description": "GraphQL mutation for updating an issue"
            },
            "variables": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Issue ID to update"
                },
                "input": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "New issue title"
                    },
                    "description": {
                      "type": "string",
                      "description": "New issue description"
                    },
                    "stateId": {
                      "type": "string",
                      "description": "New state ID for the issue"
                    },
                    "assigneeId": {
                      "type": "string",
                      "description": "New assignee ID"
                    }
                  },
                  "required": [],
                  "visible": [
                    "title",
                    "description",
                    "stateId",
                    "assigneeId"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "id",
                "input"
              ],
              "visible": [
                "id",
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__DELETE_ISSUE",
    "description": "Permanently delete an issue from Linear workspace, removing it and all associated data.",
    "tags": [
      "issues",
      "delete",
      "remove"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation IssueDelete($id: String!) { issueDelete(id: $id) { success } }",
              "description": "GraphQL mutation for deleting an issue"
            },
            "variables": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Issue ID to delete"
                }
              },
              "required": [
                "id"
              ],
              "visible": [
                "id"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__TEAMS",
    "description": "Retrieve teams from Linear workspace with their details and member information.",
    "tags": [
      "teams",
      "workspace",
      "organization"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Teams { teams { nodes { id name description key members { nodes { id name email } } states { nodes { id name type } } } } }",
              "description": "GraphQL query for retrieving teams"
            }
          },
          "required": [
            "query"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_TEAM",
    "description": "Create a new team in Linear workspace with name, key, description, and workflow configuration.",
    "tags": [
      "teams",
      "create",
      "organization"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation TeamCreate($input: TeamCreateInput!) { teamCreate(input: $input) { success team { id name key description private timezone } } }",
              "description": "GraphQL mutation for creating a team"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Team name"
                    },
                    "key": {
                      "type": "string",
                      "pattern": "^[A-Z]{2,5}$",
                      "description": "Team key (2-5 uppercase letters for issue prefixes)"
                    },
                    "description": {
                      "type": "string",
                      "description": "Team description"
                    },
                    "private": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the team is private"
                    }
                  },
                  "required": [
                    "name",
                    "key"
                  ],
                  "visible": [
                    "name",
                    "key",
                    "description",
                    "private"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__PROJECTS",
    "description": "Retrieve projects from Linear with their progress, milestones, and team assignments.",
    "tags": [
      "projects",
      "milestones",
      "planning"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Projects($first: Int) { projects(first: $first) { nodes { id name description state progress targetDate teams { nodes { name } } issues { nodes { title state { name } } } } } }",
              "description": "GraphQL query for retrieving projects"
            },
            "variables": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "default": 10,
                  "maximum": 50,
                  "description": "Number of projects to retrieve"
                }
              },
              "required": [],
              "visible": [
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_PROJECT",
    "description": "Create a new project in Linear with name, description, target date, and team assignments.",
    "tags": [
      "projects",
      "create",
      "planning"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation ProjectCreate($input: ProjectCreateInput!) { projectCreate(input: $input) { success project { id name description state targetDate } } }",
              "description": "GraphQL mutation for creating a project"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Project name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Project description"
                    },
                    "targetDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Project target completion date (ISO format)"
                    },
                    "teamIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Array of team IDs to assign to the project"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "visible": [
                    "name",
                    "description",
                    "targetDate",
                    "teamIds"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__UPDATE_PROJECT",
    "description": "Update an existing project in Linear with new name, description, target date, or team assignments.",
    "tags": [
      "projects",
      "update",
      "edit"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation ProjectUpdate($id: String!, $input: ProjectUpdateInput!) { projectUpdate(id: $id, input: $input) { success project { id name description state targetDate progress } } }",
              "description": "GraphQL mutation for updating a project"
            },
            "variables": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Project ID to update"
                },
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "New project name"
                    },
                    "description": {
                      "type": "string",
                      "description": "New project description"
                    },
                    "targetDate": {
                      "type": "string",
                      "format": "date",
                      "description": "New project target date (ISO format)"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "planned",
                        "started",
                        "completed",
                        "canceled"
                      ],
                      "description": "New project state"
                    }
                  },
                  "required": [],
                  "visible": [
                    "name",
                    "description",
                    "targetDate",
                    "state"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "id",
                "input"
              ],
              "visible": [
                "id",
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__DELETE_PROJECT",
    "description": "Delete a project from Linear workspace permanently, removing it and all associated data.",
    "tags": [
      "projects",
      "delete",
      "remove"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation ProjectDelete($id: String!) { projectDelete(id: $id) { success } }",
              "description": "GraphQL mutation for deleting a project"
            },
            "variables": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Project ID to delete"
                }
              },
              "required": [
                "id"
              ],
              "visible": [
                "id"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__COMMENTS",
    "description": "Retrieve comments for a specific issue in Linear with author details and timestamps.",
    "tags": [
      "comments",
      "discussion",
      "collaboration"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Comments($issueId: String!, $first: Int) { issue(id: $issueId) { comments(first: $first) { nodes { id body user { name email } createdAt updatedAt } } } }",
              "description": "GraphQL query for retrieving issue comments"
            },
            "variables": {
              "type": "object",
              "properties": {
                "issueId": {
                  "type": "string",
                  "description": "Issue ID to get comments for"
                },
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 50,
                  "description": "Number of comments to retrieve"
                }
              },
              "required": [
                "issueId"
              ],
              "visible": [
                "issueId",
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_COMMENT",
    "description": "Create a comment on an issue in Linear to facilitate team discussion and collaboration.",
    "tags": [
      "comments",
      "create",
      "discussion"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation CommentCreate($input: CommentCreateInput!) { commentCreate(input: $input) { success comment { id body user { name } createdAt } } }",
              "description": "GraphQL mutation for creating a comment"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "string",
                      "description": "Comment text content"
                    },
                    "issueId": {
                      "type": "string",
                      "description": "Issue ID to comment on"
                    }
                  },
                  "required": [
                    "body",
                    "issueId"
                  ],
                  "visible": [
                    "body",
                    "issueId"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__UPDATE_COMMENT",
    "description": "Update an existing comment on an issue in Linear with new text content.",
    "tags": [
      "comments",
      "update",
      "edit"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation CommentUpdate($id: String!, $input: CommentUpdateInput!) { commentUpdate(id: $id, input: $input) { success comment { id body updatedAt } } }",
              "description": "GraphQL mutation for updating a comment"
            },
            "variables": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Comment ID to update"
                },
                "input": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "string",
                      "description": "New comment text content"
                    }
                  },
                  "required": [
                    "body"
                  ],
                  "visible": [
                    "body"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "id",
                "input"
              ],
              "visible": [
                "id",
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__DELETE_COMMENT",
    "description": "Delete a comment from an issue in Linear permanently, removing it from the discussion thread.",
    "tags": [
      "comments",
      "delete",
      "remove"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation CommentDelete($id: String!) { commentDelete(id: $id) { success } }",
              "description": "GraphQL mutation for deleting a comment"
            },
            "variables": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Comment ID to delete"
                }
              },
              "required": [
                "id"
              ],
              "visible": [
                "id"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__LABELS",
    "description": "Retrieve labels from Linear workspace for categorizing and organizing issues.",
    "tags": [
      "labels",
      "tags",
      "organization"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query IssueLabels($first: Int) { issueLabels(first: $first) { nodes { id name color description team { name } } } }",
              "description": "GraphQL query for retrieving issue labels"
            },
            "variables": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "default": 50,
                  "maximum": 100,
                  "description": "Number of labels to retrieve"
                }
              },
              "required": [],
              "visible": [
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_LABEL",
    "description": "Create a new label in Linear for categorizing and organizing issues with custom color and description.",
    "tags": [
      "labels",
      "create",
      "organization"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation IssueLabelCreate($input: IssueLabelCreateInput!) { issueLabelCreate(input: $input) { success issueLabel { id name color description } } }",
              "description": "GraphQL mutation for creating a label"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Label name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Label description"
                    },
                    "color": {
                      "type": "string",
                      "pattern": "^#[0-9A-Fa-f]{6}$",
                      "description": "Hex color code for the label"
                    },
                    "teamId": {
                      "type": "string",
                      "description": "Team ID to assign the label to"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "visible": [
                    "name",
                    "description",
                    "color",
                    "teamId"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__ADD_ISSUE_LABELS",
    "description": "Add labels to an existing issue in Linear for better categorization and filtering.",
    "tags": [
      "issues",
      "labels",
      "organize"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation IssueUpdate($id: String!, $input: IssueUpdateInput!) { issueUpdate(id: $id, input: $input) { success issue { id title labels { nodes { name color } } } } }",
              "description": "GraphQL mutation for adding labels to an issue"
            },
            "variables": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Issue ID to add labels to"
                },
                "input": {
                  "type": "object",
                  "properties": {
                    "labelIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Array of label IDs to add to the issue"
                    }
                  },
                  "required": [
                    "labelIds"
                  ],
                  "visible": [
                    "labelIds"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "id",
                "input"
              ],
              "visible": [
                "id",
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CYCLES",
    "description": "Retrieve development cycles from Linear for sprint planning and iteration management.",
    "tags": [
      "cycles",
      "sprints",
      "iterations"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Cycles($first: Int, $filter: CycleFilter) { cycles(first: $first, filter: $filter) { nodes { id name description number startsAt endsAt team { name } issues { nodes { title state { name } } } progress completedAt } } }",
              "description": "GraphQL query for retrieving cycles"
            },
            "variables": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "default": 10,
                  "maximum": 50,
                  "description": "Number of cycles to retrieve"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "team": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "object",
                          "properties": {
                            "eq": {
                              "type": "string",
                              "description": "Team ID to filter cycles by"
                            }
                          },
                          "required": [],
                          "visible": [
                            "eq"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [],
                      "visible": [
                        "id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [],
                  "visible": [
                    "team"
                  ],
                  "description": "Filter conditions for cycles",
                  "additionalProperties": false
                }
              },
              "required": [],
              "visible": [
                "first",
                "filter"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_CYCLE",
    "description": "Create a new development cycle in Linear for sprint planning with start date, end date, and team assignment.",
    "tags": [
      "cycles",
      "create",
      "sprints"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation CycleCreate($input: CycleCreateInput!) { cycleCreate(input: $input) { success cycle { id name description number startsAt endsAt } } }",
              "description": "GraphQL mutation for creating a cycle"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Cycle name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Cycle description"
                    },
                    "teamId": {
                      "type": "string",
                      "description": "Team ID to assign the cycle to"
                    },
                    "startsAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Cycle start date and time (ISO format)"
                    },
                    "endsAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Cycle end date and time (ISO format)"
                    }
                  },
                  "required": [
                    "name",
                    "teamId"
                  ],
                  "visible": [
                    "name",
                    "description",
                    "teamId",
                    "startsAt",
                    "endsAt"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__WORKFLOW_STATES",
    "description": "Retrieve workflow states from Linear teams for understanding issue progression and status tracking.",
    "tags": [
      "workflow",
      "states",
      "status"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query WorkflowStates($teamId: String, $first: Int) { workflowStates(filter: { team: { id: { eq: $teamId } } }, first: $first) { nodes { id name description type position color team { name } } } }",
              "description": "GraphQL query for retrieving workflow states"
            },
            "variables": {
              "type": "object",
              "properties": {
                "teamId": {
                  "type": "string",
                  "description": "Team ID to filter workflow states by"
                },
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 50,
                  "description": "Number of workflow states to retrieve"
                }
              },
              "required": [],
              "visible": [
                "teamId",
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_WORKFLOW_STATE",
    "description": "Create a new workflow state in Linear team for customizing issue status progression and organization.",
    "tags": [
      "workflow",
      "states",
      "create"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation WorkflowStateCreate($input: WorkflowStateCreateInput!) { workflowStateCreate(input: $input) { success workflowState { id name description type position } } }",
              "description": "GraphQL mutation for creating a workflow state"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Workflow state name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Workflow state description"
                    },
                    "teamId": {
                      "type": "string",
                      "description": "Team ID to assign the workflow state to"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "backlog",
                        "unstarted",
                        "started",
                        "completed",
                        "canceled"
                      ],
                      "description": "Type of workflow state"
                    },
                    "color": {
                      "type": "string",
                      "pattern": "^#[0-9A-Fa-f]{6}$",
                      "description": "Hex color code for the state"
                    }
                  },
                  "required": [
                    "name",
                    "teamId",
                    "type"
                  ],
                  "visible": [
                    "name",
                    "description",
                    "teamId",
                    "type",
                    "color"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__USERS",
    "description": "Retrieve users from Linear workspace with their roles, teams, and activity information.",
    "tags": [
      "users",
      "team members",
      "workspace"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Users($first: Int) { users(first: $first) { nodes { id name displayName email avatarUrl isMe admin active lastSeen assignedIssues { nodes { title } } teamMemberships { nodes { team { name } role } } } } }",
              "description": "GraphQL query for retrieving users"
            },
            "variables": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 100,
                  "description": "Number of users to retrieve"
                }
              },
              "required": [],
              "visible": [
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__MILESTONES",
    "description": "Retrieve milestones from Linear workspace with their progress, target dates, and associated projects.",
    "tags": [
      "milestones",
      "roadmap",
      "planning"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Milestones($first: Int) { milestones(first: $first) { nodes { id name description targetDate sortOrder projects { nodes { id name progress } } } } }",
              "description": "GraphQL query for retrieving milestones"
            },
            "variables": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 50,
                  "description": "Number of milestones to retrieve"
                }
              },
              "required": [],
              "visible": [
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_MILESTONE",
    "description": "Create a new milestone in Linear for tracking major deadlines and project goals.",
    "tags": [
      "milestones",
      "create",
      "planning"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation MilestoneCreate($input: MilestoneCreateInput!) { milestoneCreate(input: $input) { success milestone { id name description targetDate } } }",
              "description": "GraphQL mutation for creating a milestone"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Milestone name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Milestone description"
                    },
                    "targetDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Milestone target date (ISO format)"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "visible": [
                    "name",
                    "description",
                    "targetDate"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__SEARCH_ISSUES",
    "description": "Search for issues in Linear workspace using text queries across titles, descriptions, and comments.",
    "tags": [
      "search",
      "issues",
      "find"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query SearchIssues($query: String!, $first: Int) { issueSearch(query: $query, first: $first) { nodes { id title description identifier state { name } assignee { name } team { name } labels { nodes { name } } createdAt updatedAt } } }",
              "description": "GraphQL query for searching issues"
            },
            "variables": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "Search query string"
                },
                "first": {
                  "type": "integer",
                  "default": 10,
                  "maximum": 50,
                  "description": "Number of issues to return"
                }
              },
              "required": [
                "query"
              ],
              "visible": [
                "query",
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__ATTACHMENTS",
    "description": "Retrieve attachments from a specific issue in Linear including files, images, and documents.",
    "tags": [
      "attachments",
      "files",
      "documents"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query IssueAttachments($issueId: String!, $first: Int) { issue(id: $issueId) { attachments(first: $first) { nodes { id title url subtitle metadata sourceType creator { name } createdAt } } } }",
              "description": "GraphQL query for retrieving issue attachments"
            },
            "variables": {
              "type": "object",
              "properties": {
                "issueId": {
                  "type": "string",
                  "description": "Issue ID to get attachments for"
                },
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 50,
                  "description": "Number of attachments to retrieve"
                }
              },
              "required": [
                "issueId"
              ],
              "visible": [
                "issueId",
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_ATTACHMENT",
    "description": "Create an attachment on an issue in Linear by uploading a file or linking external content.",
    "tags": [
      "attachments",
      "upload",
      "files"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation AttachmentCreate($input: AttachmentCreateInput!) { attachmentCreate(input: $input) { success attachment { id title url sourceType } } }",
              "description": "GraphQL mutation for creating an attachment"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Attachment title"
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "URL of the attachment"
                    },
                    "issueId": {
                      "type": "string",
                      "description": "Issue ID to attach the file to"
                    },
                    "subtitle": {
                      "type": "string",
                      "description": "Optional attachment subtitle or description"
                    }
                  },
                  "required": [
                    "title",
                    "url",
                    "issueId"
                  ],
                  "visible": [
                    "title",
                    "url",
                    "issueId",
                    "subtitle"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__ORGANIZATION_INFO",
    "description": "Retrieve organization information from Linear workspace including settings, subscription, and member count.",
    "tags": [
      "organization",
      "workspace",
      "info"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Organization { organization { id name logoUrl urlKey userCount userCountLimit subscription { plan seats } createdAt } }",
              "description": "GraphQL query for retrieving organization information"
            }
          },
          "required": [
            "query"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__ISSUE_RELATIONS",
    "description": "Retrieve related issues for a specific issue in Linear including blocks, duplicates, and dependencies.",
    "tags": [
      "issues",
      "relations",
      "dependencies"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query IssueRelations($issueId: String!) { issue(id: $issueId) { relations { nodes { id type issue { id title identifier state { name } } relatedIssue { id title identifier state { name } } } } } }",
              "description": "GraphQL query for retrieving issue relations"
            },
            "variables": {
              "type": "object",
              "properties": {
                "issueId": {
                  "type": "string",
                  "description": "Issue ID to get relations for"
                }
              },
              "required": [
                "issueId"
              ],
              "visible": [
                "issueId"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_ISSUE_RELATION",
    "description": "Create a relationship between two issues in Linear such as blocks, duplicates, or relates to dependencies.",
    "tags": [
      "issues",
      "relations",
      "dependencies"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation IssueRelationCreate($input: IssueRelationCreateInput!) { issueRelationCreate(input: $input) { success issueRelation { id type issue { title } relatedIssue { title } } } }",
              "description": "GraphQL mutation for creating an issue relation"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "issueId": {
                      "type": "string",
                      "description": "Primary issue ID"
                    },
                    "relatedIssueId": {
                      "type": "string",
                      "description": "Related issue ID"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "blocks",
                        "blocked",
                        "duplicate",
                        "related"
                      ],
                      "description": "Type of relationship between issues"
                    }
                  },
                  "required": [
                    "issueId",
                    "relatedIssueId",
                    "type"
                  ],
                  "visible": [
                    "issueId",
                    "relatedIssueId",
                    "type"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__ISSUE_HISTORY",
    "description": "Retrieve the history of changes for a specific issue in Linear including status updates and field modifications.",
    "tags": [
      "issues",
      "history",
      "audit"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query IssueHistory($issueId: String!, $first: Int) { issue(id: $issueId) { history(first: $first) { nodes { id createdAt actor { name } fromState { name } toState { name } fromAssignee { name } toAssignee { name } } } } }",
              "description": "GraphQL query for retrieving issue history"
            },
            "variables": {
              "type": "object",
              "properties": {
                "issueId": {
                  "type": "string",
                  "description": "Issue ID to get history for"
                },
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 50,
                  "description": "Number of history entries to retrieve"
                }
              },
              "required": [
                "issueId"
              ],
              "visible": [
                "issueId",
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__ROADMAPS",
    "description": "Retrieve roadmaps from Linear workspace for strategic planning and timeline visualization.",
    "tags": [
      "roadmaps",
      "planning",
      "strategy"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Roadmaps($first: Int) { roadmaps(first: $first) { nodes { id name description createdAt creator { name } projects { nodes { id name state progress targetDate } } } } }",
              "description": "GraphQL query for retrieving roadmaps"
            },
            "variables": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "default": 10,
                  "maximum": 50,
                  "description": "Number of roadmaps to retrieve"
                }
              },
              "required": [],
              "visible": [
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_ROADMAP",
    "description": "Create a new roadmap in Linear for strategic planning and project timeline visualization.",
    "tags": [
      "roadmaps",
      "create",
      "planning"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation RoadmapCreate($input: RoadmapCreateInput!) { roadmapCreate(input: $input) { success roadmap { id name description createdAt } } }",
              "description": "GraphQL mutation for creating a roadmap"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Roadmap name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Roadmap description"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "visible": [
                    "name",
                    "description"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CUSTOM_VIEWS",
    "description": "Retrieve custom views from Linear workspace for personalized issue filtering and organization.",
    "tags": [
      "views",
      "filters",
      "organization"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query CustomViews($first: Int) { customViews(first: $first) { nodes { id name description filterData team { name } creator { name } shared createdAt updatedAt } } }",
              "description": "GraphQL query for retrieving custom views"
            },
            "variables": {
              "type": "object",
              "properties": {
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 50,
                  "description": "Number of custom views to retrieve"
                }
              },
              "required": [],
              "visible": [
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_CUSTOM_VIEW",
    "description": "Create a new custom view in Linear for personalized issue filtering, sorting, and organization.",
    "tags": [
      "views",
      "create",
      "filters"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation CustomViewCreate($input: CustomViewCreateInput!) { customViewCreate(input: $input) { success customView { id name description shared } } }",
              "description": "GraphQL mutation for creating a custom view"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Custom view name"
                    },
                    "description": {
                      "type": "string",
                      "description": "Custom view description"
                    },
                    "shared": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether to share the view with team members"
                    },
                    "teamId": {
                      "type": "string",
                      "description": "Team ID to associate the view with"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "visible": [
                    "name",
                    "description",
                    "shared",
                    "teamId"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__TEAM_MEMBERSHIPS",
    "description": "Retrieve team memberships from Linear workspace showing users, roles, and team assignments.",
    "tags": [
      "teams",
      "memberships",
      "roles"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query TeamMemberships($teamId: String, $first: Int) { teamMemberships(filter: { team: { id: { eq: $teamId } } }, first: $first) { nodes { id role user { id name email active } team { name key } owner sortOrder } } }",
              "description": "GraphQL query for retrieving team memberships"
            },
            "variables": {
              "type": "object",
              "properties": {
                "teamId": {
                  "type": "string",
                  "description": "Team ID to filter memberships by"
                },
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 100,
                  "description": "Number of memberships to retrieve"
                }
              },
              "required": [],
              "visible": [
                "teamId",
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__CREATE_TEAM_MEMBERSHIP",
    "description": "Add a user to a team in Linear workspace with specified role and permissions.",
    "tags": [
      "teams",
      "memberships",
      "add"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation TeamMembershipCreate($input: TeamMembershipCreateInput!) { teamMembershipCreate(input: $input) { success teamMembership { id role user { name } team { name } } } }",
              "description": "GraphQL mutation for creating a team membership"
            },
            "variables": {
              "type": "object",
              "properties": {
                "input": {
                  "type": "object",
                  "properties": {
                    "teamId": {
                      "type": "string",
                      "description": "Team ID to add the user to"
                    },
                    "userId": {
                      "type": "string",
                      "description": "User ID to add to the team"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "admin",
                        "member",
                        "guest"
                      ],
                      "default": "member",
                      "description": "Role for the team member"
                    }
                  },
                  "required": [
                    "teamId",
                    "userId"
                  ],
                  "visible": [
                    "teamId",
                    "userId",
                    "role"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "input"
              ],
              "visible": [
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__ISSUE_ESTIMATES",
    "description": "Retrieve estimate information for issues in Linear including story points, time estimates, and complexity.",
    "tags": [
      "estimates",
      "planning",
      "complexity"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query Issues($filter: IssueFilter, $first: Int) { issues(filter: $filter, first: $first) { nodes { id title estimate priority priorityLabel state { name } assignee { name } team { name } cycle { name number } createdAt } } }",
              "description": "GraphQL query for retrieving issues with estimates"
            },
            "variables": {
              "type": "object",
              "properties": {
                "filter": {
                  "type": "object",
                  "properties": {
                    "team": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "object",
                          "properties": {
                            "eq": {
                              "type": "string",
                              "description": "Team ID to filter by"
                            }
                          },
                          "required": [],
                          "visible": [
                            "eq"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [],
                      "visible": [
                        "id"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [],
                  "visible": [
                    "team"
                  ],
                  "description": "Filter conditions for issues",
                  "additionalProperties": false
                },
                "first": {
                  "type": "integer",
                  "default": 20,
                  "maximum": 50,
                  "description": "Number of issues to retrieve"
                }
              },
              "required": [],
              "visible": [
                "filter",
                "first"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__UPDATE_ISSUE_ESTIMATE",
    "description": "Update the estimate for an existing issue in Linear with story points or time estimates for sprint planning.",
    "tags": [
      "issues",
      "estimates",
      "planning"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "mutation IssueUpdate($id: String!, $input: IssueUpdateInput!) { issueUpdate(id: $id, input: $input) { success issue { id title estimate priority } } }",
              "description": "GraphQL mutation for updating issue estimate"
            },
            "variables": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Issue ID to update estimate for"
                },
                "input": {
                  "type": "object",
                  "properties": {
                    "estimate": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 8,
                      "description": "Story point estimate (0-8)"
                    },
                    "priority": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 4,
                      "description": "Issue priority (0=No priority, 1=Urgent, 2=High, 3=Medium, 4=Low)"
                    }
                  },
                  "required": [],
                  "visible": [
                    "estimate",
                    "priority"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "id",
                "input"
              ],
              "visible": [
                "id",
                "input"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "query",
            "variables"
          ],
          "visible": [
            "variables"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [
        "body"
      ],
      "additionalProperties": false
    }
  },
  {
    "name": "LINEAR__WORKSPACE_ANALYTICS",
    "description": "Retrieve workspace analytics from Linear including team velocity, issue metrics, and productivity insights.",
    "tags": [
      "analytics",
      "metrics",
      "productivity"
    ],
    "visibility": "public",
    "active": true,
    "protocol": "rest",
    "protocol_data": {
      "method": "POST",
      "path": "/graphql",
      "server_url": "https://api.linear.app"
    },
    "parameters": {
      "type": "object",
      "properties": {
        "header": {
          "type": "object",
          "properties": {
            "Content-Type": {
              "type": "string",
              "default": "application/json"
            }
          },
          "required": [
            "Content-Type"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        },
        "body": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "default": "query WorkspaceAnalytics { organization { id name userCount teams { nodes { id name issueEstimationType cyclesEnabled cycleStartDay cycleDuration activeCycle { id name progress } } } } }",
              "description": "GraphQL query for retrieving workspace analytics"
            }
          },
          "required": [
            "query"
          ],
          "visible": [],
          "additionalProperties": false,
          "default": {}
        }
      },
      "required": [
        "header",
        "body"
      ],
      "visible": [],
      "additionalProperties": false
    }
  }
]